{"version":3,"sources":["../src/promises.ts"],"sourcesContent":["type AwaitedProps<P extends {}> = { [K in keyof P]: Awaited<P[K]> };\n\n/**\n * Returns a Promise to an object with all the properties resolved as promises\n */\nexport async function resolveValues<P extends {}>(obj: P): Promise<AwaitedProps<P>> {\n  const entries = Object.entries(obj).map(async ([key, value]) => [key, await value]);\n  return Object.fromEntries(await Promise.all(entries)) as AwaitedProps<P>;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,eAAsB,cAA4B,KAAkC;AAClF,QAAM,UAAU,OAAO,QAAQ,GAAG,EAAE,IAAI,OAAO,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,MAAM,KAAK,CAAC;AAClF,SAAO,OAAO,YAAY,MAAM,QAAQ,IAAI,OAAO,CAAC;AACtD;","names":[]}